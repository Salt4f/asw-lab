@model HackerNewsASW.Models.Contribution

@{
    ViewData["Title"] = "Details";
}



<!--
<h1>Details</h1>

<div>
    <h4>Contribution</h4>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.DateCreated)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.DateCreated)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Upvotes)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Upvotes)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Content)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Content)
        </dd>
    </dl>
</div>
<div>
    <a asp-action="Edit" asp-route-id="@Model.Id">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>
-->
<body data-new-gr-c-s-check-loaded="14.1006.0" data-gr-ext-installed="" data-gr-ext-disabled="forever">
    <center>
        <table id="hnmain" border="0" cellpadding="0" cellspacing="0" width="85%" bgcolor="#f6f6ef">
            <tbody>
                <tr id="pagespace" title=@Model.getTitle() style="height:10px"></tr>
                <tr>
                    <td>
                        <table class="fatitem" border="0">
                            <tbody>
                                <tr class="athing" id="26842018">
                                    <td align="right" valign="top" class="title"><span class="rank"></span></td>
                                    <td valign="top" class="votelinks"><center><a id="up_26842018" href="vote?id=26842018&amp;how=up&amp;goto=item%3Fid%3D26842018"><div class="votearrow" title=@Model.Upvotes></div></a></center></td>
                                    <td class="title">
                                        @if (Model.GetType() == typeof(HackerNewsASW.Models.News))
                                        {
                                            <a href="@Model.Content" class="storylink">@Model.getTitle()</a>
                                            <span class="sitebit comhead"> (<a href=@Model.Content ><span class="sitestr">@Model.Content.Split("//")[1].Split("/")[0]</span></a>)</span>
                                        }
                                        else
                                        {
                                            <p class="storylink">@Model.getTitle() </p>
                                        }
                                    </td>
                                </tr>
                                <tr>
                                    <td colspan="2"></td>
                                    <td class="subtext">
                                        <span class="score" id="score_26842018">@Model.Upvotes </span> by <a href="user?id=@Model.Author" class="hnuser">@Model.Author</a> <span class="age">@GetPrettyDate(Model.DateCreated)<a href="item?id=26842018"></a></span> <span id="unv_26842018"></span> | <a href="hide?id=26842018&amp;goto=item%3Fid%3D26842018">hide</a> | <a href="https://hn.algolia.com/?query=Self-Supervised%20Video%20Object%20Segmentation%20by%20Motion%20Grouping&amp;type=story&amp;dateRange=all&amp;sort=byDate&amp;storyText=false&amp;prefix&amp;page=0" class="hnpast">past</a> | <a href="fave?id=26842018&amp;auth=198ae303bcbd9953f9ccf89d70f958761f99e7df">favorite</a> | <a href="item?id=26842018">@Model.Comments.Count comments</a>
                                    </td>
                                </tr>
                                <tr style="height:10px"></tr>
                                <tr>
                                    <td colspan="2"></td>
                                    <td>
                                        <form asp-action="Details">
                                            <textarea asp-for="Content" rows="6" cols="60">a</textarea>
                                            <br><br><input type="submit">
                                        </form>
                                    </td>
                                </tr>
                            </tbody>
                        </table><br><br>
                        <table border="0" class="comment-tree">
                            <tbody>
                                <tr class="athing comtr" id="26842175">
                                    <td>
                                        <table border="0">
                                            <tbody>
                                                <tr>
                                                    <td class="ind"><img src="s.gif" height="1" width="0"></td>
                                                    <td valign="top" class="votelinks">
                                                        <center><a id="up_26842175" href="vote?id=26842175&amp;how=up&amp;goto=item%3Fid%3D26842018"><div class="votearrow" title="upvote"></div></a></center>
                                                    </td>
                                                    <td class="default">
                                                        <div style="margin-top:2px; margin-bottom:-10px;">
                                                            <span class="comhead">
                                                                <a href="user?id=ttty" class="hnuser">ttty</a> <span class="age"><a href="item?id=26842175">2 hours ago</a></span> <span id="unv_26842175"></span><span class="par"></span> <a class="togg" n="3" href="javascript:void(0)" onclick="return toggle(event, 26842175)">[–]</a>          <span class="storyon"></span>
                                                            </span>
                                                        </div><br><div class="comment">
                                                            <span class="commtext c00">Animals have evolved highly functional visual systems to understand motion, assisting perception even under complex environments. In this paper, we work towards developing a computer vision system able to segment objects by exploiting motion cues, i.e. motion segmentation. We make the following contributions: First, we introduce a simple variant of the Transformer to segment optical flow frames into primary objects and the background. Second, we train the architecture in a self-supervised manner, i.e. without using any manual annotations. Third, we analyze several critical components of our method and conduct thorough ablation studies to validate their necessity. Fourth, we evaluate the proposed architecture on public benchmarks (DAVIS2016, SegTrackv2, and FBMS59). Despite using only optical flow as input, our approach achieves superior results compared to previous state-of-the-art self-supervised methods, while being an order of magnitude faster. We additionally evaluate on a challenging camouflage dataset (MoCA), significantly outperforming the other self-supervised approaches, and comparing favourably to the top supervised approach, highlighting the importance of motion cues, and the potential bias towards visual appearance in existing video segmentation models.</span>
                                                            <div class="reply">
                                                                <p>
                                                                    <font size="1">
                                                                        <u><a href="reply?id=26842175&amp;goto=item%3Fid%3D26842018%2326842175">reply</a></u>
                                                                    </font>
                                                                </p>
                                                            </div>
                                                        </div>
                                                    </td>
                                                </tr>
                                            </tbody>
                                        </table>
                                    </td>
                                </tr>
                                <tr class="athing comtr" id="26842534">
                                    <td>
                                        <table border="0">
                                            <tbody>
                                                <tr>
                                                    <td class="ind"><img src="s.gif" height="1" width="40"></td>
                                                    <td valign="top" class="votelinks">
                                                        <center><a id="up_26842534" href="vote?id=26842534&amp;how=up&amp;goto=item%3Fid%3D26842018"><div class="votearrow" title="upvote"></div></a></center>
                                                    </td>
                                                    <td class="default">
                                                        <div style="margin-top:2px; margin-bottom:-10px;">
                                                            <span class="comhead">
                                                                <a href="user?id=jonplackett" class="hnuser">jonplackett</a> <span class="age"><a href="item?id=26842534">1 hour ago</a></span> <span id="unv_26842534"></span><span class="par"></span> <a class="togg" n="2" href="javascript:void(0)" onclick="return toggle(event, 26842534)">[–]</a>          <span class="storyon"></span>
                                                            </span>
                                                        </div><br><div class="comment">
                                                            <span class="commtext c00">Amazing! I always thought it must be a huge disadvantage that computer vision only has one frame to work with (and only one camera vs 2 eyes). Often as a human you stare at for a while when trying to spot something tricky, like a bird in the trees and then find it when it moves. Or you move you head side to side to create movement. It would be interesting to see a comparison with what the best single frame segmentation could detect in one of these scenes.</span>
                                                            <div class="reply">
                                                                <p>
                                                                    <font size="1">
                                                                        <u><a href="reply?id=26842534&amp;goto=item%3Fid%3D26842018%2326842534">reply</a></u>
                                                                    </font>
                                                                </p>
                                                            </div>
                                                        </div>
                                                    </td>
                                                </tr>
                                            </tbody>
                                        </table>
                                    </td>
                                </tr>
                                <tr class="athing comtr" id="26842922">
                                    <td>
                                        <table border="0">
                                            <tbody>
                                                <tr>
                                                    <td class="ind"><img src="s.gif" height="1" width="80"></td>
                                                    <td valign="top" class="votelinks">
                                                        <center><a id="up_26842922" href="vote?id=26842922&amp;how=up&amp;goto=item%3Fid%3D26842018"><div class="votearrow" title="upvote"></div></a></center>
                                                    </td>
                                                    <td class="default">
                                                        <div style="margin-top:2px; margin-bottom:-10px;">
                                                            <span class="comhead">
                                                                <a href="user?id=mkl" class="hnuser">mkl</a> <span class="age"><a href="item?id=26842922">4 minutes ago</a></span> <span id="unv_26842922"></span><span class="par"></span> <a class="togg" n="1" href="javascript:void(0)" onclick="return toggle(event, 26842922)">[–]</a>          <span class="storyon"></span>
                                                            </span>
                                                        </div><br><div class="comment">
                                                            <span class="commtext c00">That's just the abstract of the linked article.</span>
                                                            <div class="reply">
                                                                <p>
                                                                    <font size="1">
                                                                        <u><a href="reply?id=26842922&amp;goto=item%3Fid%3D26842018%2326842922">reply</a></u>
                                                                    </font>
                                                                </p>
                                                            </div>
                                                        </div>
                                                    </td>
                                                </tr>
                                            </tbody>
                                        </table>
                                    </td>
                                </tr>
                             </tbody>
                        </table>
                        <br><br>
                    </td>
                </tr>
                
            </tbody>
        </table>
    </center>


</body>

@functions{
    static string GetPrettyDate(DateTime d)
    {
        // 1.
        // Get time span elapsed since the date.
        TimeSpan s = DateTime.Now.Subtract(d);

        // 2.
        // Get total number of days elapsed.
        int dayDiff = (int)s.TotalDays;

        // 3.
        // Get total number of seconds elapsed.
        int secDiff = (int)s.TotalSeconds;

        // 4.
        // Don't allow out of range values.
        if (dayDiff < 0) return null;

        // 5.
        // Handle same-day times.
        if (dayDiff == 0)
        {
            // A.
            // Less than one minute ago.
            if (secDiff < 60) return "just now";

            // B.
            // Less than 2 minutes ago.
            if (secDiff < 120) return "1 minute ago";

            // C.
            // Less than one hour ago.
            if (secDiff < 3600) return string.Format("{0} minutes ago", Math.Floor((double)secDiff / 60));

            // D.
            // Less than 2 hours ago.
            if (secDiff < 7200) return "1 hour ago";
            // E.
            // Less than one day ago.
            if (secDiff < 86400) return string.Format("{0} hours ago", Math.Floor((double)secDiff / 3600));
        }
        // 6.
        // Handle previous days.
        if (dayDiff == 1) return "yesterday";

        if (dayDiff < 7) return string.Format("{0} days ago", dayDiff);

        //Handle previous weeks
        if (dayDiff < 31) return string.Format("{0} weeks ago", Math.Ceiling((double)dayDiff / 7));

        //Handle previous months
        if (dayDiff < 365) return string.Format("{0} months ago", Math.Ceiling((double)dayDiff / 30.41));

        //Handle previous years
        return string.Format("{0} years ago", Math.Ceiling((double)dayDiff / 365));
    }
}