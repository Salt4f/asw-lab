@model IEnumerable<HackerNewsASW.Models.Contribution>

    @{
    ViewData["Title"] = "UserComments";
    }




    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta content="origin" name="referrer">
        <meta content="width=device-width, initial-scale=1.0" name="viewport">
        <link href="news.css?YPefPYx6Bk3NjVjZaccM" rel="stylesheet" type="text/css">
        <link href="favicon.ico" rel="shortcut icon">
        <title>comments | Hacker News</title>
    </head>
    <body>
        <center>
            <table bgcolor="#F6F6EF" border="0" cellpadding="0" cellspacing="0" id="hnmain" width="85%">
                <tbody>
                    <tr id="pagespace" style="height:10px" title="ramboenel's comments">
                        <td></td>
                    </tr>
                    <tr>
                        <td></td>
                    </tr>
                    @{int i = 1;}
                    @foreach (var item in Model){

                    @if (item.GetType() == typeof(HackerNewsASW.Models.Comment))
                        {
                    <tr class="athing comtr" id="26860528">

                        <td>
                            <table border="0">
                                <tbody>
                                    <tr>
                                        <td class="votelinks" valign="top">
                                            <center>
                                                <font color="#FF6600">*</font><br>

                                            </center>
                                        </td>
                                        @if (Context.User.Identity is null || !Context.User.Identity.IsAuthenticated)
                                            {
                                var usermail=item.Author.Email;
                                        <td class="default">
                                            <div style="margin-top:2px; margin-bottom:-10px;">
                                                <span class="comhead"><span class="score" id="score_26860528">1 point</span> by <a asp-controller="Account" asp-action="OtherProfile" asp-route-usermail="@item.Author.Email">@item.Author.UserId</a> <span class="age"><a href="item?id=26860528">@GetPrettyDate(item.DateCreated)</a> | <a class="Reference">Falta referencia</a></span></span>
                                            </div><br>
                                            <div class="comment">
                                                <span class="commtext c00" asp-controller="Contributions" asp-action="Details" asp-route-id="@item.Id">@item.Content</span>
                                                <div class="reply">
                                                    <p><font size="1"><u><a href="reply?id=26860528&amp;goto=threads%3Fid%3Dramboenel%2326860528">reply</a></u></font></p>
                                                </div>
                                            </div>
                                        </td>
                                        }
                                        else {
                                            var usermail=item.Author.Email;
                                        <td class="default">
                                            <div style="margin-top:2px; margin-bottom:-10px;">
                                                <span class="comhead"><span class="score" id="score_26860528">1 point</span> by <a asp-controller="Account" asp-action="CheckUser" asp-route-usermail="@item.Author.Email">@item.Author.UserId</a> <span class="age"><a href="item?id=26860528">@GetPrettyDate(item.DateCreated)</a> | <a class="Reference">Falta referencia</a></span></span>
                                            </div><br>
                                            <div class="comment">
                                                <span class="commtext c00">@item.Content</span>
                                                <div class="reply">
                                                    <p><font size="1"><u><a href="reply?id=26860528&amp;goto=threads%3Fid%3Dramboenel%2326860528">reply</a></u></font></p>
                                                </div>
                                            </div>
                                        </td>
                                        }
                                    </tr>
                                </tbody>
                            </table>
                        </td>
                    </tr>
                         }
                    { i++; }
                    }
                    <tr>
                        <td>
                            
                            <table cellpadding="1" cellspacing="0" width="100%">
                                <tbody>
                                    <tr>
                                        <td bgcolor="#FF6600"></td>
                                    </tr>
                                </tbody>
                            </table><br>
                            <center>
                                <span class="yclinks"><a href="newsguidelines.html">Guidelines</a> | <a href="newsfaq.html">FAQ</a> | <a href="lists">Lists</a> | <a href="https://github.com/HackerNews/API">API</a> | <a href="security.html">Security</a> | <a href="http://www.ycombinator.com/legal/">Legal</a> | <a href="http://www.ycombinator.com/apply/">Apply to YC</a> | <a href="mailto:hn@ycombinator.com">Contact</a></span><br>
                                <br>
                                <form action="//hn.algolia.com/" method="get">
                                    Search: <input autocomplete="false" name="q" size="17" spellcheck="false" type="text" value="">
                                </form>
                            </center>
                        </td>
                    </tr>
                </tbody>
            </table>
        </center>
        <script src="hn.js?YPefPYx6Bk3NjVjZaccM" type="text/javascript">
        </script>
    </body>
</html>

@functions{
    static string GetPrettyDate(DateTime d)
    {
        // 1.
        // Get time span elapsed since the date.
        TimeSpan s = DateTime.Now.Subtract(d);

        // 2.
        // Get total number of days elapsed.
        int dayDiff = (int)s.TotalDays;

        // 3.
        // Get total number of seconds elapsed.
        int secDiff = (int)s.TotalSeconds;

        // 4.
        // Don't allow out of range values.
        if (dayDiff < 0) return null;

        // 5.
        // Handle same-day times.
        if (dayDiff == 0)
        {
            // A.
            // Less than one minute ago.
            if (secDiff < 60) return "just now";

            // B.
            // Less than 2 minutes ago.
            if (secDiff < 120) return "1 minute ago";

            // C.
            // Less than one hour ago.
            if (secDiff < 3600) return string.Format("{0} minutes ago", Math.Floor((double)secDiff / 60));

            // D.
            // Less than 2 hours ago.
            if (secDiff < 7200) return "1 hour ago";
            // E.
            // Less than one day ago.
            if (secDiff < 86400) return string.Format("{0} hours ago", Math.Floor((double)secDiff / 3600));
        }
        // 6.
        // Handle previous days.
        if (dayDiff == 1) return "yesterday";

        if (dayDiff < 7) return string.Format("{0} days ago", dayDiff);

        //Handle previous weeks
        if (dayDiff < 31) return string.Format("{0} weeks ago", Math.Ceiling((double)dayDiff / 7));

        //Handle previous months
        if (dayDiff < 365) return string.Format("{0} months ago", Math.Ceiling((double)dayDiff / 30.41));

        //Handle previous years
        return string.Format("{0} years ago", Math.Ceiling((double)dayDiff / 365));
    }
}
